buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
		appSecret = 'z0yS6FyQfnMt4-jZIuVTmm-Q'
		dockerVersion = '0.13.0'
		jarVersion = '0.0.2'
		jarGroupName = 'sanchitasantra'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  	id "com.palantir.docker" version "0.13.0"
}
	
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
    baseName = "${rootProject.name}"
    version =  "${jarVersion}"
}

group = "${jarGroupName}"
version = "${jarVersion}"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	//just to run the server
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.google.cloud.sql:postgres-socket-factory:1.0.4')
    compile('org.postgresql:postgresql:42.1.4.jre7')
    //just for authentication
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
